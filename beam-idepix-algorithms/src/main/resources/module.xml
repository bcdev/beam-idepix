<module>
    <manifestVersion>1.0.0</manifestVersion>
    <symbolicName>beam-idepix-algorithms</symbolicName>
    <version>2.2.3</version>
    <name>Idepix Algorithms</name>
    <description>
        Idepix algorithms module. Idepix is a generic pixel identification and classification algorithm for optical
        Earth observation sensors.
    </description>

    <vendor>Brockmann Consult GmbH</vendor>
    <contactAddress>
        Max Planck Str.2, 21502 Geesthacht (Germany)
    </contactAddress>
    <copyright>(C) 2014 by Brockmann Consult GmbH</copyright>
    <url>http://envisat.esa.int/beam</url>
    <licenseUrl>http://www.gnu.org/licenses/gpl.html</licenseUrl>

    <changelog>
        <b>Version 2.2.8:</b>
        <b>Version 2.2.7:</b>
        <b>Version 2.2.6:</b>
        <b>Version 2.2.5:</b>
        <b>Version 2.2.4:</b>
        <b>Version 2.2.3:</b>
        <b>Version 2.2.2:</b>
        <br/>
        Improvements of cloud tests and performance for Landsat 8.
        <b>Version 2.1.2:</b>
        <b>Version 2.1.5:</b>
        <br/>
        Merged latest EVOLUTION changes into master branch, i.e. algorithms for new sensors (AVHRR, MODIS, SeaWIFS).
        <b>Version 2.1.2:</b>
        <br/>
        Uses an updated BEAM MERIS Radiometry module (bug fix in case of very bright nearly saturated pixels).
        <br/>
        <b>Version 2.1.1:</b>
        <br/>
        Initial public release for BEAM 5. Previous releases were for project-internal use only.
        <br/>
    </changelog>

    <dependency>
        <module>beam-idepix-operators</module>
    </dependency>
    <dependency>
        <module>beam-idepix-core</module>
    </dependency>

    <dependency>
        <module>beam-core</module>
    </dependency>
    <dependency>
        <module>beam-gpf</module>
    </dependency>
    <dependency>
        <module>beam-unmix</module>
    </dependency>
    <dependency>
        <module>beam-visat</module>
        <optional>true</optional>
    </dependency>
    <dependency>
        <module>beam-envisat-reader</module>
    </dependency>
    <!--<dependency>-->
    <!--<module>beam-avhrr-directory-reader</module>-->
    <!--</dependency>-->
    <dependency>
        <module>beam-meris-brr</module>
    </dependency>
    <dependency>
        <module>beam-meris-l2auxdata</module>
    </dependency>
    <dependency>
        <module>beam-meris-sdr</module>
    </dependency>
    <dependency>
        <module>beam-watermask</module>
    </dependency>
    <dependency>
        <module>beam-meris-radiometry</module>
    </dependency>

    <categories>Application,Processor,MERIS,AATSR</categories>

    <extension point="beam-ui:actions">
        <action>
            <id>idepix</id>
            <class>org.esa.beam.visat.actions.ActionGroup</class>
            <text>IDEPIX Generic classification of pixels...</text>
            <shortDescr>
                IDEPIX Generic classification of pixels (cloud, snow, ice, land, water) originating from optical
                sensors.
            </shortDescr>
            <mnemonic/>
            <parent>processing.preProcessing</parent>
            <helpID>idepixChain</helpID>
            <placeAfter/>
        </action>
        <action>
            <id>cawaAlgo</id>
            <class>org.esa.beam.idepix.ui.actions.IdepixCawaAction</class>
            <text>CAWA (MERIS)...</text>
            <shortDescr>Pixel classification with CAWA algorithm.</shortDescr>
            <mnemonic>W</mnemonic>
            <parent>idepix</parent>
            <helpId>idepixChain</helpId>
        </action>
        <action>
            <id>coastcolourAlgo</id>
            <class>org.esa.beam.idepix.ui.actions.IdepixCoastColourAction</class>
            <text>CoastColour (MERIS)...</text>
            <shortDescr>Pixel classification with CoastColour algorithm.</shortDescr>
            <mnemonic>C</mnemonic>
            <parent>idepix</parent>
            <helpId>idepixChain</helpId>
        </action>
        <action>
            <id>avhrracAlgo</id>
            <class>org.esa.beam.idepix.ui.actions.IdepixAvhrrAcAction</class>
            <text>LandCover (AVHRR)...</text>
            <shortDescr>Pixel classification with LandCover AVHRR algorithm.</shortDescr>
            <mnemonic>A</mnemonic>
            <parent>idepix</parent>
            <helpId>idepixChain</helpId>
        </action>
        <action>
            <id>globalbedoAlgo</id>
            <class>org.esa.beam.idepix.ui.actions.IdepixGlobAlbedoAction</class>
            <text>GlobAlbedo (MERIS, AATSR, VGT)...</text>
            <shortDescr>Pixel classification with GlobAlbedo algorithm.</shortDescr>
            <mnemonic>G</mnemonic>
            <parent>idepix</parent>
            <helpId>idepixChain</helpId>
        </action>
        <action>
            <id>landsat8Algo</id>
            <class>org.esa.beam.idepix.ui.actions.IdepixLandsat8Action</class>
            <text>HighRoc (Landsat 8)...</text>
            <shortDescr>Pixel classification with Landsat 8 algorithm.</shortDescr>
            <mnemonic>L</mnemonic>
            <parent>idepix</parent>
            <helpId>idepixChain</helpId>
        </action>
        <action>
            <id>modisSeawifsAlgo</id>
            <class>org.esa.beam.idepix.ui.actions.IdepixModisSeawifsAction</class>
            <text>OC-CCI (MODIS, SeaWiFS)...</text>
            <shortDescr>Pixel classification with OC-CCI algorithm (Schiller NNs).</shortDescr>
            <mnemonic>O</mnemonic>
            <parent>idepix</parent>
            <helpId>idepixChain</helpId>
        </action>
    </extension>

    <extension point="beam-ui:helpSets">
        <helpSet>
            <parent>beam-help</parent>
            <path>doc/help/idepix.hs</path>
        </helpSet>
    </extension>

</module>
